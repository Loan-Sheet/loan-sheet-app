# Cloud Build Configuration for the loan-sheet-app service
# Version: 2.2 - Patched for JDK 21 Compatibility

steps:
  # STEP 1: Restore Maven cache from Google Cloud Storage to speed up the build.
  # This step is non-critical; if the cache doesn't exist, it will fail gracefully.
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'Restore-Cache'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'gsutil -m rsync -r gs://${PROJECT_ID}_cloudbuild/maven-cache/ /root/.m2 || true'
    waitFor: ['-'] # Start immediately

  # STEP 2: Build the Spring Boot application using Maven.
  # It uses the restored cache to avoid re-downloading dependencies.
  - name: 'maven:3.9.8-eclipse-temurin-21'
    id: 'Build-Application'
    entrypoint: 'bash'
    env:
      - 'MAVEN_OPTS=-Dmaven.repo.local=/root/.m2/repository'
    args:
      - '-c'
      - 'mvn package -DskipTests=true -B -q'
    waitFor:
      - 'Restore-Cache'

  # STEP 3: Save the new Maven cache for future builds.
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'Save-Cache'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'gsutil -m rsync -r /root/.m2 gs://${PROJECT_ID}_cloudbuild/maven-cache/'
    waitFor:
      - 'Build-Application'

  # STEP 4: Prepare the deployment artifacts in a clean staging directory.
  # Using 'alpine' for a lightweight and fast execution for file operations.
  - name: 'alpine'
    id: 'Prepare-Deployment-Directory'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        mkdir -p deploy-stage && \
        cp src/main/appengine/app.yaml deploy-stage/ && \
        cp target/*.jar deploy-stage/application.jar && \
        echo "Deployment artifacts prepared:" && \
        ls -la deploy-stage/
    waitFor:
      - 'Build-Application'

  # STEP 5: Deploy the application to App Engine.
  # It points to the staging directory which contains both the app.yaml and the JAR.
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy-to-App-Engine'
    args:
      - 'app'
      - 'deploy'
      - 'deploy-stage/app.yaml'
      - '--promote'
      - '--quiet'
      - '--stop-previous-version'
      - '--version=${_SERVICE_NAME}-${SHORT_SHA}'
      - '--project=${PROJECT_ID}'
    waitFor:
      - 'Prepare-Deployment-Directory'

# Substitutions for dynamic variables.
substitutions:
  _SERVICE_NAME: loan-sheet-app

# Options for the build process.
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout configuration
timeout: '600s'  # 10 minutes